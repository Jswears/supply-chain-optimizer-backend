AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Inventory stack with AddProduct Lambda function

Parameters:
  Environment:
    Type: String
    Description: 'Deployment environment (dev, staging, prod).'
    AllowedValues: [dev, staging, prod]
    Default: dev

Resources:
  AddProductLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ChainOptAddProduct-${Environment}"
      Handler: addProduct.handler
      Runtime: nodejs22.x
      Timeout: 10
      MemorySize: 256
      Role: arn:aws:iam::891376911200:role/ChainOptAddProductRole-dev
      CodeUri: ../build/addProduct.zip
      Environment:
        Variables:
          INVENTORY_TABLE_NAME: !Sub "ChainOptInventory-${Environment}"
  GetAllProductsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ChainOptGetAllProducts-${Environment}"
      Handler: getAllProducts.handler
      Runtime: nodejs22.x
      Timeout: 10
      MemorySize: 256
      Role: arn:aws:iam::891376911200:role/ChainOptGetAllProductsRole-dev
      CodeUri: ../build/getAllProducts.zip
      Environment:
        Variables:
          INVENTORY_TABLE_NAME: !Sub "ChainOptInventory-${Environment}"

  GetProductLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ChainOptGetProduct-${Environment}"
      Handler: getProduct.handler
      Runtime: nodejs22.x
      Timeout: 10
      MemorySize: 256
      Role: arn:aws:iam::891376911200:role/ChainOptGetProductRole-dev
      CodeUri: ../build/getProduct.zip
      Environment:
        Variables:
          INVENTORY_TABLE_NAME: !Sub "ChainOptInventory-${Environment}"

  GetAllProductsByWarehouseIdLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ChainOptGetAllProductsByWarehouseId-${Environment}"
      Handler: getAllProductsByWarehouseId.handler
      Runtime: nodejs22.x
      Timeout: 10
      MemorySize: 256
      Role: arn:aws:iam::891376911200:role/ChainOptGetAllProductsByWarehouseIdRole-dev
      CodeUri: ../build/getAllProductsByWarehouseId.zip
      Environment:
        Variables:
          INVENTORY_TABLE_NAME: !Sub "ChainOptInventory-${Environment}"

  DeleteProductLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ChainOptDeleteProduct-${Environment}"
      Handler: deleteProduct.handler
      Runtime: nodejs22.x
      Timeout: 10
      MemorySize: 256
      Role: arn:aws:iam::891376911200:role/ChainOptDeleteProductRole-dev
      CodeUri: ../build/deleteProduct.zip
      Environment:
        Variables:
          INVENTORY_TABLE_NAME: !Sub "ChainOptInventory-${Environment}"

Outputs:
  AddProductLambdaArn:
    Description: ARN of the AddProduct Lambda function
    Value: !GetAtt AddProductLambda.Arn
    Export:
      Name: !Sub "ChainOptAddProductLambdaArn-${Environment}"
  GetAllProductsLambdaArn:
    Description: ARN of the GetAllProducts Lambda function
    Value: !GetAtt GetAllProductsLambda.Arn
    Export:
      Name: !Sub "ChainOptGetAllProductsLambdaArn-${Environment}"
  GetProductLambdaArn:
    Description: ARN of the GetProduct Lambda function
    Value: !GetAtt GetProductLambda.Arn
    Export:
      Name: !Sub "ChainOptGetProductLambdaArn-${Environment}"
  GetAllProductsByWarehouseIdLambdaArn:
    Description: ARN of the GetAllProductsByWarehouseId Lambda function
    Value: !GetAtt GetAllProductsByWarehouseIdLambda.Arn
    Export:
      Name: !Sub "ChainOptGetAllProductsByWarehouseIdLambdaArn-${Environment}"
  DeleteProductLambdaArn:
    Description: ARN of the DeleteProduct Lambda function
    Value: !GetAtt DeleteProductLambda.Arn
    Export:
      Name: !Sub "ChainOptDeleteProductLambdaArn-${Environment}"


