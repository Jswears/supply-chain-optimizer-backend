AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM roles and policies for ChainOpt Inventory.'

Parameters:
  Environment:
    Type: String
    Description: 'Deployment environment (dev, staging, prod).'
    AllowedValues: [dev, staging, prod]
    Default: dev

Resources:
  ChainOptAddProductRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'ChainOptAddProductRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'ChainOptAddProductPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:PutItem'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChainOptInventory-${Environment}'
        - PolicyName: 'ChainOptAddProductLogPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ChainOptAddProduct-${Environment}:*'

  ChainOptGetAllProductsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'ChainOptGetAllProductsRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'ChainOptGetAllProductsPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:Scan'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChainOptInventory-${Environment}'
        - PolicyName: 'ChainOptGetAllProductsLogPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ChainOptGetAllProducts-${Environment}:*'

  ChainOptGetProductRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'ChainOptGetProductRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'ChainOptGetProductPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:GetItem'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChainOptInventory-${Environment}'
        - PolicyName: 'ChainOptGetProductLogPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ChainOptGetProduct-${Environment}:*'

  ChainOptGetAllProductsByWarehouseIdRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'ChainOptGetAllProductsByWarehouseIdRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'ChainOptGetAllProductsByWarehouseIdPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:Query'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChainOptInventory-${Environment}/index/GSI-Warehouse'
        - PolicyName: 'ChainOptGetAllProductsByWarehouseIdLogPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ChainOptGetAllProductsByWarehouseId-${Environment}:*'

  ChainOptDeleteProductRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'ChainOptDeleteProductRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'ChainOptDeleteProductPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChainOptInventory-${Environment}'
        - PolicyName: 'ChainOptDeleteProductLogPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ChainOptDeleteProduct-${Environment}:*'

  ChainOptUpdateProductRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'ChainOptUpdateProductRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'ChainOptUpdateProductPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:UpdateItem'
                  - 'dynamodb:GetItem'
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ChainOptInventory-${Environment}'
        - PolicyName: 'ChainOptUpdateProductLogPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ChainOptUpdateProduct-${Environment}:*'

Outputs:
  ChainOptAddProductRoleArn:
    Value: !GetAtt ChainOptAddProductRole.Arn
  ChainOptAddProductRoleName:
    Value: !Ref ChainOptAddProductRole
  ChainOptGetAllProductsRoleArn:
    Value: !GetAtt ChainOptGetAllProductsRole.Arn
  ChainOptGetAllProductsRoleName:
    Value: !Ref ChainOptGetAllProductsRole
  ChainOptGetProductRoleArn:
    Value: !GetAtt ChainOptGetProductRole.Arn
  ChainOptGetProductRoleName:
    Value: !Ref ChainOptGetProductRole
  ChainOptGetAllProductsByWarehouseIdRoleArn:
    Value: !GetAtt ChainOptGetAllProductsByWarehouseIdRole.Arn
  ChainOptGetAllProductsByWarehouseIdRoleName:
    Value: !Ref ChainOptGetAllProductsByWarehouseIdRole
  ChainOptDeleteProductRoleArn:
    Value: !GetAtt ChainOptDeleteProductRole.Arn
  ChainOptDeleteProductRoleName:
    Value: !Ref ChainOptDeleteProductRole
